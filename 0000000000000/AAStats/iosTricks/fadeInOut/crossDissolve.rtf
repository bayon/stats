{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red11\green96\blue192;\red0\green0\blue0;\red255\green255\blue255;
\red109\green110\blue114;\red234\green234\blue234;\red0\green0\blue120;\red37\green127\blue159;\red107\green0\blue1;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 cross dissolve\
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat4 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth1200\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth13300\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl240\qc

\f1\fs2 \cf2 down vote\
\pard\intbl\itap1\pardeftab720\sl240\qc
\cf5 accepted\cell 
\pard\intbl\itap1\pardeftab720\sl340\sa280

\fs28 \cf0 This (original part) is not to take away from H2CO3's correct answer. 
\f2 \cb6 UIModalTransitionStyleCrossDissolve
\f1 \cb1  does pretty-much exactly the effect you're looking for. You are just not setting the modalTransitionStyle until it's to late. Replace all of your code with these functions in there respective positions:\
\pard\intbl\itap1\pardeftab720\sl340

\f2 \cf0 \cb6 -(\cf7 void\cf0 )show\{\
    \cf7 self\cf0 .infoViewController.modalTransitionStyle = \cf8 UIModalTransitionStyleCrossDissolve\cf0 ;\
    [\cf7 self\cf0  presentModalViewController:\cf7 self\cf0 .infoViewController animated:YES];\
\}\
- (\cf8 IBAction\cf0 )dismissAction:(id)sender\{\
    [\cf7 self\cf0  dismissModalViewControllerAnimated:YES];\
\}\
\pard\intbl\itap1\pardeftab720\sl340\sa280

\f1\b \cf0 \cb1 Edit in response to timing being an issue:
\b0  Let's talk about the offending code. We'll concentrate on just the if true part, since it's essentially identical to the else.\
\pard\intbl\itap1\pardeftab720\sl340

\f2 \cf0 \cb6 [[\cf7 self\cf0  parentViewController] dismissModalViewControllerAnimated:YES];\
\pard\intbl\itap1\pardeftab720\sl340
\cf7 self\cf0 .parentViewController.modalTransitionStyle = \cf8 UIModalTransitionStyleCrossDissolve\cf0 ;\
\cf7 self\cf0 .parentViewController.view.alpha = \cf9 0.0\cf0 ;\
[\cf8 UIView\cf0  animateWithDuration:\cf9 0.5\cf0 \
                 animations:^\{\cf7 self\cf0 .parentViewController.view.alpha  = \cf9 1.0\cf0 ;\}];\
\pard\intbl\itap1\pardeftab720\sl340\sa280

\f1 \cf0 \cb1 If you're looking for a reciprocal animation this isn't it. In your original animation you set the next view's alpha to 0, then presented the next view controller, then set it's view's alpha to 1. So logically you need to dismiss the view controller after the animation; This is really easy using blocks. The code would look something like this:\
\pard\intbl\itap1\pardeftab720\sl340

\f2 \cf0 \cb6 [\cf8 UIView\cf0  animateWithDuration:\cf9 0.5\cf0  animations:^\{\
    \cf7 self\cf0 .view.alpha = \cf9 0\cf0 ;\
\} completion:^(BOOL b)\{\
    [\cf7 self\cf0 .presentingViewController dismissModalViewControllerAnimated:NO];\
    \cf7 self\cf0 .view.alpha = \cf9 1\cf0 ;\
\}];\
\pard\intbl\itap1\pardeftab720\sl340\sa280

\f1 \cf0 \cb1 This line of code animates the view's alpha to 0, then (upon completion) dismisses the presented view controller, and sets the view's alpha back to 1. This is a reciprocal animation.\cell \lastrow\row
}